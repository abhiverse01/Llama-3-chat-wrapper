# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js and Python CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        python-version: [3.8, 3.9, 3.10]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        # Python versions as needed

    steps:
    - uses: actions/checkout@v4

    # Node.js setup and build
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install Node.js dependencies
      run: npm ci
    - name: Build Node.js application
      run: npm run build --if-present
    - name: Test Node.js application
      run: npm test

    # Python setup and build
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r api/requirements.txt

    # Test Python application
    - name: Test Python application
      run: |
        # Assuming you have tests set up for your Flask app
        python -m unittest discover -s api/tests

    # Deploy step (optional, can be customized)
    # - name: Deploy to Vercel
    #   run: vercel --prod
    #   env:
    #     VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
